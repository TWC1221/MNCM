Title: Test Problem for 1D Slab Geometry

problem radiation  @ Radiation transport problem
mode direct        @ solution mode [direct,adjoint or both]
case eigenvalue    @ Fixed (extraneous) source problem - can also be set to eigenvalue
geometry slab      @ One-dimensional slab geometry problem
angle 1            @ Order of the spherical harmonic (PN expansion) - can take values 1, 3, 5, 7 etc (odd number)
scatter 0          @ Order of scattering anisotropy legendre expansion - can take values 0, 1, 2 etc (0 is isotropic)
@print fluxes      @ Print the scalar fluxes at each of the finite element nodes to the screen
groups 3           @ Number of energy groups (this is a one group or speed approximation)
upscatter yes       @ no upscatter from lower energy groups to higher energy groups (one speed approximation)

@iter  500 500 5.0e-04 5.0e-04 500 1.0e-07 500  @ iteration parameters for the pre-conditioned conjugate gradient (PCG) algorithm/solver

sizeil 600000000
sizerl 600000000
SIZEIM 600000000
SIZERM 600000000

@
@ - Define points that make up the line segments of the slab geometry.
@

pnt p1 0.0
pnt p2 0.5
pnt p3 1.0
@ pnt p4 1.5

@
@ - Define detector points in the domain (points at which scalar flux and current detectors are placed).
@

pnt pd1 0.0
pnt pd2 0.5
pnt pd3 1.0
@ pnt pd4 1.5

@
@ - Define line segments using the previously defined points.
@

line l1 p1 p2
line l2 p2 p3
@ line l3 p3 p4


@
@ - Divide lines into smaller line segments (i.e. define number of divisions per line segment).
@

divide 10000 l1
divide 10000 l2
@ divide 1000 l3

@
@ - Define regions using these line segments.
@

region r1 l1
region r2 l2
@ region r3 l3

@
@ - Define material nuclear x/s properties.
@
@ - These are macroscopic nuclear x/s data are defined as follows:
@
@ - Total x/s (Sigma_t), absorption x/s (Sigma_a), nu*fission x/s (nu*sigma_f) and scattering x/s (Sigma_s).
@

material ma1 ^
4.0 1.0 1.0 1.0 1.0 1.0 ^
4.0 1.0 1.0 1.0 1.0 1.0 ^
4.0 1.0 1.0 1.0 1.0 1.0

material ma2 ^
4.0 1.0 1.0 1.0 1.0 1.0 ^
4.0 1.0 1.0 1.0 1.0 1.0 ^
4.0 1.0 1.0 1.0 1.0 1.0

@ material ma3 ^
@ 1.0 1.0 0.0 0.0


spectrum 0.5 0.25 0.25

@
@ - Define a surface source (note these are usually done groupwise but this is one speed so only one value)
@ - In this case the surface source is isotropic with magnitude of unity (or 1 cm^-2.s^-1).
@

surface t1 0.0
surface t2 0.0
@ surface t3 0.0

@
@ - Define an albedo or reflection coefficient (note these are usually done groupwise but this is one speed so only one value)
@ - In this case the albedo has a magnitude of 1.0. If it had less than 1.0 then you would have some transmission and some reflection.
@

albedo  a1 0.0
albedo  a2 0.0

@
@ - define a volumetric source
@

source s1 1.0 1.0 1.0
source s2 1.0 1.0 1.0
@ source s3 1.0

@
@ - Assign material properties and sources to regions.
@

property r1 ma1 
property r2 ma1 
@ property r3 ma3 s3

@
@ - assign boundary conditions
@ - boundary conditions can be: "zero", "reflect", "vacuum or bare", periodic, "albedo value"(a1 or a2 defined above), "surface source value" (t1 or t2 defined above)
@

boundary vacuum l1
boundary vacuum l2

@
@ - Define degree of polynomial basis functions for the finite elements (1 is linear, 2 is quadratic and 3 is cubic etc).
@

degree 1

@
@ - Define averaging regions over which we calculate the numbers of elements, average flux, average capture, total source rate emission.
@

average 1 r1
average 2 r2
@ average 3 r3

@
@ - Define detectors (scalar or current)
@
@ - The scalar currents use the detector positions defined previously i.e. pd1, pd2, pd3 etc.
@ - The current detectors need a position they are placed as well as a vector direction.
@ - Now for 1-D slab geometry this would be the vector (1,0,0) for the positive x-direction
@ - and (-1,0,0) for the negative x-direction. In 3D you would specify the vector (x,y,z)
@ - as the direction vector as appropriate.
@

sensor scalar  pd1
sensor scalar  pd2
sensor scalar  pd3
@ sensor scalar  pd4

@
@ - fill up lines with nodes and elements
@

fill

@
@ - graphical output device
@

dumpvtu

@
@ - output mesh file to default file
@

data

@
@ - stop gem run
@

stop
